// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace NGLBCMS.Models
{
    public partial class CharacterSelection
    {
        private string _characterID;
        
        /// <summary>
        /// Optional. Unique ID (number) that represents Player's Character
        /// </summary>
        public string CharacterID
        {
            get { return this._characterID; }
            set { this._characterID = value; }
        }
        
        private string _classVariable;
        
        /// <summary>
        /// Optional. Character Class (Warlock, Titan, Hunter)
        /// </summary>
        public string Class
        {
            get { return this._classVariable; }
            set { this._classVariable = value; }
        }
        
        private string _emblemBackgroundPath;
        
        /// <summary>
        /// Optional. Absolute Image Path of Character Banner
        /// </summary>
        public string EmblemBackgroundPath
        {
            get { return this._emblemBackgroundPath; }
            set { this._emblemBackgroundPath = value; }
        }
        
        private string _emblemPath;
        
        /// <summary>
        /// Optional. Absolute Image Path of Character Emblem
        /// </summary>
        public string EmblemPath
        {
            get { return this._emblemPath; }
            set { this._emblemPath = value; }
        }
        
        private string _gender;
        
        /// <summary>
        /// Optional. Character Gender (male, female)
        /// </summary>
        public string Gender
        {
            get { return this._gender; }
            set { this._gender = value; }
        }
        
        private int? _level;
        
        /// <summary>
        /// Optional. Character Base Level (40 etc)
        /// </summary>
        public int? Level
        {
            get { return this._level; }
            set { this._level = value; }
        }
        
        private int? _lightLevel;
        
        /// <summary>
        /// Optional. Character Light Level (gear level)
        /// </summary>
        public int? LightLevel
        {
            get { return this._lightLevel; }
            set { this._lightLevel = value; }
        }
        
        private string _race;
        
        /// <summary>
        /// Optional. Character Race (Awoken, Human, Exo)
        /// </summary>
        public string Race
        {
            get { return this._race; }
            set { this._race = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the CharacterSelection class.
        /// </summary>
        public CharacterSelection()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken characterIDValue = inputObject["CharacterID"];
                if (characterIDValue != null && characterIDValue.Type != JTokenType.Null)
                {
                    this.CharacterID = ((string)characterIDValue);
                }
                JToken classValue = inputObject["Class"];
                if (classValue != null && classValue.Type != JTokenType.Null)
                {
                    this.Class = ((string)classValue);
                }
                JToken emblemBackgroundPathValue = inputObject["EmblemBackgroundPath"];
                if (emblemBackgroundPathValue != null && emblemBackgroundPathValue.Type != JTokenType.Null)
                {
                    this.EmblemBackgroundPath = ((string)emblemBackgroundPathValue);
                }
                JToken emblemPathValue = inputObject["EmblemPath"];
                if (emblemPathValue != null && emblemPathValue.Type != JTokenType.Null)
                {
                    this.EmblemPath = ((string)emblemPathValue);
                }
                JToken genderValue = inputObject["Gender"];
                if (genderValue != null && genderValue.Type != JTokenType.Null)
                {
                    this.Gender = ((string)genderValue);
                }
                JToken levelValue = inputObject["Level"];
                if (levelValue != null && levelValue.Type != JTokenType.Null)
                {
                    this.Level = ((int)levelValue);
                }
                JToken lightLevelValue = inputObject["LightLevel"];
                if (lightLevelValue != null && lightLevelValue.Type != JTokenType.Null)
                {
                    this.LightLevel = ((int)lightLevelValue);
                }
                JToken raceValue = inputObject["Race"];
                if (raceValue != null && raceValue.Type != JTokenType.Null)
                {
                    this.Race = ((string)raceValue);
                }
            }
        }
    }
}
